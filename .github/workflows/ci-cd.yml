name: CloudCal CI/CD

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install -r webApp/requirements.txt

    - name: Run basic test script
      run: |
        python webApp/test.py

    - name: Debug Docker secrets presence
      run: |
        if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
          echo "DOCKER_USERNAME is empty!"
          exit 1
        else
          echo "DOCKER_USERNAME is set"
        fi
        if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
          echo "DOCKER_PASSWORD is empty!"
          exit 1
        else
          echo "DOCKER_PASSWORD is set"
        fi

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Debug Docker username
      run: echo "Username is set: ${{ secrets.DOCKER_USERNAME }}"

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/cloudcal:webapp-${{ github.sha }} ./webApp

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/cloudcal:webapp-${{ github.sha }}

    - name: (Optional) Tag as latest on master branch
      if: github.ref == 'refs/heads/master'
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/cloudcal:webapp-${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/cloudcal:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/cloudcal:latest

    - name: Deploy to server
      if: github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.DEPLOY_SERVER_IP }}
        username: ${{ secrets.DEPLOY_SERVER_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          bash ~/cloudcal-deploy/deploy.sh
